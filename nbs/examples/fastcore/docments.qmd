---
title: "docments"
description: "module fastcore.docments in fastcore"
---

## Classes

    builtins.object
        inspect._empty
    
    
### empty
    


```{=html}
<blockquote><strong><code>empty = class _empty(builtins.object)</code></strong></blockquote>
```


    
     |  Marker object for Signature.empty and Parameter.empty.
     |  
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

## Functions

    
### `docments`
    


```{=html}
<blockquote><strong><code>docments(elt, full=False, *, returns=True, eval_str=False)</code></strong></blockquote>
```


    
        Generates a `docment`
    
### `docstring`
    


```{=html}
<blockquote><strong><code>docstring(sym)</code></strong></blockquote>
```


    
        Get docstring for `sym` for functions ad classes
    
### `get_dataclass_source`
    


```{=html}
<blockquote><strong><code>get_dataclass_source(s)</code></strong></blockquote>
```


    
        Get source code for dataclass `s`
    
### `get_name`
    


```{=html}
<blockquote><strong><code>get_name(obj)</code></strong></blockquote>
```


    
        Get the name of `obj`
    
### `get_source`
    


```{=html}
<blockquote><strong><code>get_source(s)</code></strong></blockquote>
```


    
        Get source code for string, function object or dataclass `s`
    
### `isdataclass`
    


```{=html}
<blockquote><strong><code>isdataclass(s)</code></strong></blockquote>
```


    
        Check if `s` is a dataclass but not a dataclass' instance
    
### `parse_docstring`
    


```{=html}
<blockquote><strong><code>parse_docstring(sym)</code></strong></blockquote>
```


    
        Parse a numpy-style docstring in `sym`
    
### `qual_name`
    


```{=html}
<blockquote><strong><code>qual_name(obj)</code></strong></blockquote>
```


    
        Get the qualified name of `obj`

