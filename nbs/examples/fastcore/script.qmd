---
title: "script"
description: "module fastcore.script in fastcore"
---

## Classes

    builtins.object
        Param
    
    
### Param
    


```{=html}
<blockquote><strong><code>class Param(builtins.object)</code></strong></blockquote>
```


    
     |  Param(help='', type=None, opt=True, action=None, nargs=None, const=None, choices=None, required=None, default=None)
     |  
     |  A parameter in a function used in `anno_parser` or `call_parse`
     |  
     |  Methods defined here:
     |  
     |  
#### `Param.__init__`
     |  
     |  __init__(self, help='', type=None, opt=True, action=None, nargs=None, const=None, choices=None, required=None, default=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  
#### `Param.__repr__`
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  
#### `Param.set_default`
     |  
     |  set_default(self, d)
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  kwargs
     |  
     |  pre
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

## Functions

    
### `anno_parser`
    


```{=html}
<blockquote><strong><code>anno_parser(func, prog: str = None)</code></strong></blockquote>
```


    
        Look at params (annotated with `Param`) in func and return an `ArgumentParser`
    
### `args_from_prog`
    


```{=html}
<blockquote><strong><code>args_from_prog(func, prog)</code></strong></blockquote>
```


    
        Extract args from `prog`
    
### `bool_arg`
    


```{=html}
<blockquote><strong><code>bool_arg(v)</code></strong></blockquote>
```


    
        Use as `type` for `Param` to get `bool` behavior
    
### `call_parse`
    


```{=html}
<blockquote><strong><code>call_parse(func=None, nested=False)</code></strong></blockquote>
```


    
        Decorator to create a simple CLI from `func` using `anno_parser`
    
### `clean_type_str`
    


```{=html}
<blockquote><strong><code>clean_type_str(x: str)</code></strong></blockquote>
```


    
        # %% ../nbs/08_script.ipynb 18
    
### `store_false`
    


```{=html}
<blockquote><strong><code>store_false()</code></strong></blockquote>
```


    
        Placeholder to pass to `Param` for `store_false` action
    
### `store_true`
    


```{=html}
<blockquote><strong><code>store_true()</code></strong></blockquote>
```


    
        Placeholder to pass to `Param` for `store_true` action

